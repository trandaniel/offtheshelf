<script type="text/javascript">
var map;
var profiles;
var markers = [];
var labels = "ABCDEFGHIJKLMNOPQRSTUVWXYZ";
var geocoder;
var currentPos = [];
var positions = [];
var addresses = [];
//console.log(profiles);

function setMark(lat, lng) {
  for (var x = 0 ;x < positions.length ; x++) {
    if (positions[x][0] == lat && positions[x][1] == lng) {
      return 0;
    }
  }
  positions.push([lat,lng]);
}

function initMap() {
  //console.log("initiating map");

  map = new google.maps.Map(document.getElementById('map'), {
    center: {lat: -34.397, lng: 150.644},
    zoom: 15
  })
  // Try HTML5 geolocation.
  if (navigator.geolocation) {
    navigator.geolocation.getCurrentPosition(function(position) {
      var pos = {
        lat: position.coords.latitude,
        lng: position.coords.longitude
      };
      currentPos.push(position.coords.latitude);
      currentPos.push(position.coords.longitude);

      /*
      Creates custom marker for current location.
      */
      var myloc = new google.maps.Marker({
        clickable: false,
        icon: new google.maps.MarkerImage('//maps.gstatic.com/mapfiles/mobile/mobileimgs2.png',
        new google.maps.Size(22,22),
        new google.maps.Point(0,18),
        new google.maps.Point(11,11)),
        shadow: null,
        zIndex: 999,
        map: map
      });
      myloc.setPosition(pos);
      map.setCenter(pos);
      //console.log("Map set");
      //getLocations();
      setMarkers();
    }, function() {
      handleLocationError(true, infoWindow, map.getCenter());
    });
  } else {
    // Browser doesn't support Geolocation
    //console.log("");
    handleLocationError(false, infoWindow, map.getCenter());
  }
}

function handleLocationError(browserHasGeolocation, infoWindow, pos) {
  //console.log("Location failed");
  infoWindow.setPosition(pos);
  infoWindow.setContent(browserHasGeolocation ?
    'Error: The Geolocation service failed.' :
    'Error: Your browser doesn\'t support geolocation.');
  }

  function getLocations() {
    //console.log('getting location');
    //console.log(allProfiles) ;
    xhr = new XMLHttpRequest();
    var rootweb = "http://localhost:3000/profiles";//"http://offtheshelf.herokuapp.com" + "/profiles";
    xhr.onreadystatechange = function() {
      if (this.readyState == 4 && this.status == 200) {
        //console.log('api requested');
        profiles = JSON.parse(xhr.responseText);
        //console.log(profiles);
        //setMarkers();
      }
    }
    //alert(rootweb);
    xhr.open('GET', rootweb , true);
    xhr.send(null);
  }

  function setMarkers() {
    //console.log('setting markers');
    //console.log(profiles.length);

    for (var p = 0 ; p < positions.length ; p++) {
      var latlng = new google.maps.LatLng(parseFloat(positions[p][0]), parseFloat(positions[p][1]));
      console.log('latlng:', latlng);
      /*console.log(latlng);
      console.log("Mark");
      console.log(mark, profile);*/
      var marker = new google.maps.Marker({
        position: latlng
      });
      markers.push(marker);
      marker.setIcon("http://maps.google.com/mapfiles/marker" + labels.charAt(p) + ".png");
      marker.setMap(map);
    }
    console.log(positions);
    //console.log(addresses);
  }

  function highlightMarker() {
    //console.log("clicked");
    stopCurrentAnimations();
    var index = labels.indexOf(contents.charAt(contents.indexOf("</h2>") -1)); //Get marker index by relating to position of label A,B,C ec
    var selected = markers[index];
    map.setCenter(selected.position);
    selected.setAnimation(google.maps.Animation.BOUNCE);
  }

  function stopCurrentAnimations() {
    for (var i = 0 ; i < markers.length ; i ++) {
      markers[i].setAnimation(null);
    }
  }
</script>

<div id="map" onload="initMap(this.innerHTML)"></div>
<br>
<ul class="list-group">
  <% for(var i = 0 ; i < searchRes.length ; i++) { %>
    <li class="list-group-item" onclick = "highlightMarker()">
      <div class="listDiv">
        <h3><%= searchRes[i].name %></h3>
        <p class="align-left">
          Stock: <%= searchRes[i].stock %> <br>
          Cost: <%= searchRes[i].cost %> <br>
          Sell by: <%= searchRes[i].sellBy %>
        </p>
        <p class="align-right">
          <%var address = [searchRes[i].profile.streetnumber, searchRes[i].profile.street] %>
          <%= searchRes[i].profile.streetnumber + " " + searchRes[i].profile.street %> <br>
          <%= searchRes[i].profile.country %> <br>
          <%= searchRes[i].profile.city %>
        </p>
      </div>
    </li>
    <% } %>
  </ul>
  <script async defer
  src="https://maps.googleapis.com/maps/api/js?key=AIzaSyCioBIw7Zm_9e0Z3a8O0QGVawEZRwPs9TY&callback=initMap">
  </script>
  <% for(var i = 0 ; i < searchRes.length ; i ++) { %>
    <script type="text/javascript">
      setMark(<%-searchRes[i].profile.lat.toString()%>, <%-searchRes[i].profile.lng.toString()%>);
    </script>
  <% } %>
